<%namespace name="conf" file="provision.conf.mako"/>\
<%namespace name="sh" file="provision.sh.mako"/>\
<%def name="render(x=0, flav=1)">\
  notcompute:
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            /root/tuskar/provision.conf:
              content:
                Fn::Base64:
                  |
<% conf.render() %>\
              mode: "000644"
              owner: root
              group: root
            /root/tuskar/provision.sh:
              content:
                Fn::Base64:
                  |
<% sh.render() %>\
              mode: "000700"
              owner: root
              group: root
      OpenStack::Heat::Stack: {}
      Openstack::ImageBuilder::Elements:
      - boot-stack
      - heat-cfntools
      - heat-localip
      - neutron-network-node
      admin-password: unset
      admin-token: unset
      cinder:
        db: mysql://cinder:unset@localhost/cinder
        volume_size_mb: '5000'
      controller-address: 192.0.2.5
      db-password: unset
      glance:
        db: mysql://glance:unset@localhost/glance
        host: 192.0.2.5
      heat:
        access_key_id:
          Ref: Key
        admin_password: unset
        admin_tenant_name: service
        admin_user: heat
        auth_encryption_key: unset___________
        db: mysql://heat:unset@localhost/heat
        heat_watch_server_url: http://192.0.2.5:8003
        metadata_server_url: http://192.0.2.5:8000
        refresh:
        - resource: notcompute
        secret_key:
          Fn::GetAtt:
          - Key
          - SecretAccessKey
        stack:
          name:
            Ref: AWS::StackName
          region:
            Ref: AWS::Region
        waitcondition_server_url: http://192.0.2.5:8000/v1/waitcondition
      interfaces:
        control: eth2
      keystone:
        db: mysql://keystone:unset@localhost/keystone
        host: 192.0.2.5
      neutron:
        floatingip_end: 192.0.2.64
        floatingip_range: 192.0.2.0/24
        floatingip_start: 192.0.2.45
        host: 192.0.2.5
        metadata_proxy_shared_secret: unset
        ovs:
          enable_tunneling: 'True'
          fixed_range:
            end: 10.255.255.254
            start: 10.0.0.2
          local_ip: 192.0.2.5
          ovs_range: 10.0.0.0/8
          public_interface: eth0
          tenant_network_type: gre
        ovs_db: mysql://neutron:unset@localhost/ovs_neutron?charset=utf8
      nova:
        compute_driver: libvirt.LibvirtDriver
        db: mysql://nova:unset@localhost/nova
        host: 192.0.2.5
        metadata-proxy: true
      rabbit:
        host: 192.0.2.5
        password: guest
      service-password: unset
    Properties:
      ImageId:
        Ref: notcomputeImage
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      AvailabilityZone: nova::${x}
      UserData:
        Fn::Base64:
          |
          #!/bin/bash -v
          /opt/aws/bin/cfn-init
          # We need to set the undercloud Heat IP in the boto config.  Atm this
          # is hardcoded.  We should set a hostname in the tuskar conf.
          sed -e "s/0.0.0.0/192.0.2.2/g" /var/lib/heat-cfntools/cfn-boto-cfg > /tmp/cfn-boto-cfg
          mv -f /tmp/cfn-boto-cfg /var/lib/heat-cfntools/cfn-boto-cfg
          exec /root/tuskar/provision.sh &> /root/tuskar/provision.log &
    Type: AWS::EC2::Instance
</%def>\
