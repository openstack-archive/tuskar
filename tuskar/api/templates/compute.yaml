<%def name="render(x)">\
  Nova${x}:
    Metadata:
      OpenStack::ImageBuilder::Elements:
      - nova-compute
      os-collect-config:
        cfn:
          access_key_id:
            Ref: ComputeKey
          path: Nova${x}Config.Metadata
          secret_access_key:
            Fn::GetAtt:
            - ComputeKey
            - SecretAccessKey
          stack_name:
            Ref: AWS::StackName
    Properties:
      flavor:
        Ref: Flavor
      image:
        Ref: NovaImage
      key_name:
        Ref: KeyName
      availability_zone: nova::${x}
    Type: OS::Nova::Server
  Nova${x}Config:
    Metadata:
      admin-password:
        Ref: AdminPassword
      glance:
        host:
          Fn::Select:
          - 0
          - Fn::Select:
            - ctlplane
            - Fn::GetAtt:
              - notcompute
              - networks
      interfaces:
        control:
          Ref: NovaInterfaces
      keystone:
        host:
          Fn::Select:
          - 0
          - Fn::Select:
            - ctlplane
            - Fn::GetAtt:
              - notcompute
              - networks
      neutron:
        host:
          Fn::Select:
          - 0
          - Fn::Select:
            - ctlplane
            - Fn::GetAtt:
              - notcompute
              - networks
        ovs:
          bridge_mappings: ''
          enable_tunneling: 'True'
          local_ip:
            Fn::Select:
            - 0
            - Fn::Select:
              - ctlplane
              - Fn::GetAtt:
                - Nova${x}
                - networks
          network_vlan_ranges: ''
          tenant_network_type: gre
        ovs_db:
          Fn::Join:
          - ''
          - - mysql://neutron:unset@
            - Fn::Select:
              - 0
              - Fn::Select:
                - ctlplane
                - Fn::GetAtt:
                  - notcompute
                  - networks
            - /neutron
        service-password:
          Ref: NeutronPassword
      nova:
        compute_driver:
          Ref: NovaComputeDriver
        compute_libvirt_type:
          Ref: NovaComputeLibvirtType
        db:
          Fn::Join:
          - ''
          - - mysql://nova:unset@
            - Fn::Select:
              - 0
              - Fn::Select:
                - ctlplane
                - Fn::GetAtt:
                  - notcompute
                  - networks
            - /nova
        host:
          Fn::Select:
          - 0
          - Fn::Select:
            - ctlplane
            - Fn::GetAtt:
              - notcompute
              - networks
        service-password:
          Ref: NovaPassword
      os-collect-config:
        cfn:
          access_key_id:
            Ref: ComputeKey
          path: Nova${x}Config.Metadata
          secret_access_key:
            Fn::GetAtt:
            - ComputeKey
            - SecretAccessKey
          stack_name:
            Ref: AWS::StackName
      rabbit:
        host:
          Fn::Select:
          - 0
          - Fn::Select:
            - ctlplane
            - Fn::GetAtt:
              - notcompute
              - networks
        password: guest
      swift:
        store_key: ''
        store_user: ''
    Properties:
      ImageId: '0'
      InstanceType: '0'
    Type: AWS::AutoScaling::LaunchConfiguration
  User:
    Properties:
      Policies:
      - Ref: AccessPolicy
    Type: AWS::IAM::User
</%def>\
