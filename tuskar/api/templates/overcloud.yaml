<%namespace name="not_compute" file="not_compute.yaml"/>\
<%namespace name="compute" file="compute.yaml"/>\
<% # Mapping between resource class service type and a HEAT template
   # TODO (mtaylor) Move this into Config file or add to model via API call.
   templates = {"compute": compute, "not_compute": not_compute} %>\
Description: Nova API,Keystone,Heat Engine and API,Glance,Neutron,Dedicated MySQL
  server,Dedicated RabbitMQ Server,Group of Nova Computes
HeatTemplateFormatVersion: '2012-12-12'
Parameters:
  InstanceType:
    Default: baremetal
    Description: Flavor to request when deploying.
    Type: String
  KeyName:
    Default: default
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: String
  NovaComputeDriver:
    Default: libvirt.LibvirtDriver
    Type: String
  NovaImage:
    Default: overcloud-compute
    Type: String
  NovaInterfaces:
    Default: eth0
    Type: String
  PowerUserName:
    Default: stack
    Description: What username to ssh to the virtual power host with.
    Type: String
  notcomputeImage:
    Type: String
    Default: overcloud-control
Resources:
  AccessPolicy:
    Properties:
      AllowedResources:
      - notcompute
    Type: OS::Heat::AccessPolicy
  Key:
    Properties:
      UserName:
        Ref: User
    Type: AWS::IAM::AccessKey
  User:
    Properties:
      Policies:
      - Ref: AccessPolicy
    Type: AWS::IAM::User
<% for rc in resource_classes:
       for r in rc.racks:
           for n in r.nodes:
               templates[rc.service_type].render(n.node_id, rc.flavor_id)
%>
